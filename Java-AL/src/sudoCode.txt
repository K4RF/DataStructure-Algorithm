dp[N][L][R](N개 인풋까지 수행했고, 왼쪽 다리가 L, 오른쪽 다리가 R에 있을 때 힘의 최솟값)
mp(한 발을 이동할 때 드는 힘을 미리 저장하기(mp[1][2] -> 1에서 2로 이동할 때 드는 힘))
dp를 충분히 큰 수로 초기화
dp[0][0][0]을 0으로 초기화 -> 처음에는 아무 힘이 들지 않은 상태로 시작

whlie(모든 수열이 수행됐을 때까지){
    for(i -> 0 ~ 4){
        바로 직전 오른쪽 다리가 있을 수 있는 5가지 경우 누적 합 구하기
        dp 배열에 오른쪽 다리 이동에 필요한 힘 합산 값 중 최솟값 저장하기
    }
    for(i -> 0 ~ 4){
        바로 직전 왼쪽 다리가 있을 수 있는 5가지 경우 누적 합 구하기
        dp 배열에 왼쪽 다리 이동에 필요한 힘 합산 값 중 최솟값 저장하기
    }
}

for(i -> 0 ~ 4){
    for(j -> 0 ~ 4){
        min = Math.min(min, dp[s][i][j]);
    }
}
최솟값 출력하기