N(노드 수), M(엣지 수)
parent(대표 노드 저장 배열)
queue(엣지 정보를 저장할 우선순위 큐)
for(M만큼 반복하기){
    queue에 엣지 정보 저장하기
}
while(사용한 엣지 수가 노드 -1이 될 때까지){
    큐에서 엣지 정보 가져오기
    엣지 시작점과 끝점의 부모 노드가 다르면 -> 연결해도 사이클이 생기지 않으면 union 연산 수행하기
    엣지의 가중치를 정답 변수에 더하기
}
정답 변수 출력하기
union(a, b){
    a와 b의 대표 노드 찾기
    두 원소의 대표 노드끼리 연결하기
}
find(a){
    a가 대표 노드면 리턴하기
    아니면 a의 대표 노드값을 find(parent[a]) 값으로 저장 -> 재귀 함수 형태
}
 pNode implements Comparable{
    s(출발 노드), e(종료 노드), v(가중치)
    가중ㅊ치의 오름차순 정렬되도록 compareTo 함수 구현하기
 }