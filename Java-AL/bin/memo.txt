N(정렬할 수 개수) M(탐색할 숫자의 개수)
A(정렬할 배열 선언하기)
for(N의 개수만큼 반복){
	A 배열 저장하기
}

A 배열 정렬하기

for(M의 개수만큼 반복){
	target(찾아야 하는 수)
	start(시작 인덱스)
	end(종료 인덱스)

	while(시작 인덱스 <= 종료 인덱스){
		midi(중간 인덱스)
		if(중앙값 > target){
			종료 인덱스 = 중간 인덱스 - 1
		}
		else if(중앙값 < target){
			시작 인덱스 = 중간 인덱스 + 1
		}
		else{
			찾았으므로 반복문 종료하기
		}
	}
	if(찾았음) 1 출력
	else 0 출력
}

for(N의 개수만큼 반복하기){
	각 노드와 관련된 엣지를 정렬하기
}
visited 배열 초기화하기
DFS(start) 실행하기
visited배열 초기화하기
BFS(Start) 실행하기

DFS{
	현재 노드 출력하기
	visited 배열에 현재 노드 방문 기록하기
	현재 노드의 연결 노드 중 방문하지 않은 노드로 DFS 실행하기(재귀 함수 형태)
}
BFS{
	큐 자료구조에 시작 노드 삽입하기(add 연산)
	visited 배열에 현재 노드 방문 기록하기
	while(큐가 비어 있을 때까지){
		큐에서 노드 데이터를 가져오기(poll 연산)
		가져온 노드 출력하기
		현재 노드의 연결 노드 중 미방문 노드를 큐에 삽입(add 연산)하고 방문 배열에 기록하기
	}
}