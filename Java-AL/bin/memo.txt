N(도시의 수) M(여행 계획에 속한 도시의 수)
dosi(도시 연결 데이터 배열), route(여행 계획 도시 저장 배열)
for(N만큼 반복하기){
    for(N만큼 반복하기){
        dosi 데이터 저장하기
    }
}

for(M만큼 반복하기){
    route 데이터 저장하기
}

for(N만큼 반복하기){
    대표 노드를 자기 자신으로 초기화하기
}

for(i -> N만큼 반복하기){
    for(j -> N만큼 반복하기){
        dosi[i][j] == 1이면, 즉 도시가 연결돼 있으면 union 연산하기
    }
}

for(M만큼 반복하기){
    route에 포함되는 노드들의 대표 노드가 모두 동일한지 확인한 후 결괏값 출력하기
}

union(a, b){
    a와 b의 대표 노드 찾기
    두 원소의 대표 노드끼리 연결하기
}
find(a){
    a가 대표 노드면 리턴
    아니면 a의 대ㅛ 노드값을 find(parent[a])값으로 저장 -> 재귀 함수 형태
}