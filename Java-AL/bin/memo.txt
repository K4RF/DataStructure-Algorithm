Sender, Receiver(6가지 경우를 탐색하기 위한 선언 배열)
answer(정답 배열)
now(A, B, C의 값을 저장하는 배열)
now 배열 저장하기
visited, answer 초기화 작업하기

BFS 수행하기
for(answer 배열 탐색하기){
    ansewr 배열에서 값이 true인 index를 정답으로 출력하기
}

BFS{
    큐 자료구조에 출발 노드 더하기 -> A와 B가 0인 상태이므로 0, 0 노드에서 시작하기
    visited 배열에 현재 노드 방문 기록하기
    answer 배열에 현재 C의 값 체크하기
    while(큐가 빌 때까지){
        큐에서 노드 데이터를 가져오기(poll 연산)
        데이터를 이용해 A, B, C의 값 초기화하기
        for(6가지 케이스 반복하기){
            받는 물통에 보내려는 물통의 값을 더하기
            보내려는 물통 값ㅇ르 0으로 업데이트하기

            if(받는 물통이 넘칠 때){
                넘치는 만큼 보내는 물통에 다시 넣어주고, 받는 물통은 이 물통의 최댓값으로 저장
            }

            현재 노드의 연결 노드 중 방문하지 않은 노드로
            큐에 데이터 삽입(add 연산)하고 visited 배열에 방문 기록하기,
            if(1번째 물통이 비어 있을 때) 3번째 물통의 물의 양을 answer 배열에 기록하기
        }
    }
}

class AB{
    A, B 물통 무게를 변수로 가짐
}